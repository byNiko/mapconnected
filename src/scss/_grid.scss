@use "mixins" as *;

.site {
	display: flex;
	flex-direction: column;
}

.site-content {
	display: flex;
	flex: 1;
	column-gap: var(--spacer-grid);
	flex-direction: column;

	// padding-left: var(--spacer-8);
	// padding-right: var(--spacer-8);
	main {
		overflow: hidden;
	}

	.has-sidebar & {
		flex-direction: row;

	}

	aside {
		@include bp(md){
		flex: 0 0 250px;
	}
	}
}

main {
	flex: 1;
}

.container {
	width: 100%;
@include bp(md){
	max-width: 90%;
}
	margin-left: auto;
	margin-right: auto;
	padding-left: var(--spacer-grid);
	padding-right: var(--spacer-grid);
}

.container-fluid {
	@extend .container;
	width: 100%;
	max-width: 100%;
}
.container--wide {
	@extend .container;
	width: 100%;
	max-width: 80rem;
}

.container--narrow {
	@extend .container;
	max-width: 60rem;
}

.container--very-narrow {
	@extend .container;
	max-width: 48rem;
}

.container--single-column {
	@extend .container;
	max-width: 40rem;

	&.has_background {
		padding: 2rem;
	}
}

.has-sidebar .site-content {
	@extend .container--narrow;
}

.no-sidebar .site-content {
	@extend .container;
}

.grid {
	display: grid;
	gap: var(--spacer-grid);

	// &.__2x &.__3x &.__4x &.__5x {
	// 	display: block;
	// }

	@include bp(md) {
		&.__2x {
			grid-template-columns: repeat(2, 1fr);
		}

		&.__3x {
			// grid-template-columns: repeat(3, 1fr);
			grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
			
		}

		&.__4x {
			// grid-template-columns: repeat(4, 1fr);
			grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
		}

		&.__5x {
			grid-template-columns: repeat(5, 1fr);
		}
	}
}

.row {
	margin-left: calc(-1 * var(--spacer-grid));
	margin-right: calc(-1 * var(--spacer-grid));

	& > .col {
		padding-left: var(--spacer-grid);
		padding-right: var(--spacer-grid);
	}
}

.flex-row {
	display: flex;
	flex-wrap: wrap;
	flex-direction: column;
	gap: var(--spacer-grid);

	@include bp(md) {
		flex-direction: row;
	}

	&.__2x,
	&.__3x,
	&.__4x,
	&.__5x {

		& > * {
			flex: 0 1 100%;
		}
	}

	@include bp(md) {
		&.__2x > * {
			flex: 0 1 calc(50% - var(--spacer-grid));
		}

		&.__3x > * {
			flex: 0 1 calc(33% - var(--spacer-grid));
		}

		&.__4x > * {
			flex: 0 1 calc(25% - var(--spacer-grid));
		}

		&.__5x > * {
			flex: 0 1 calc(20% - var(--spacer-grid));
		}
	}
}

.flex-column {
	display: flex;
	flex-direction: column;
}

.col {
	flex: 1;
}

.col-66 {
	flex: 0 1 66%;
}

.gap-1 {
	gap: var(--spacer-4);
}

.column-gap--large {
	column-gap: var(--spacer-14);
}

// .column {
// 	padding-left: var(--spacer-col);
// 	padding-right: var(--spacer-col);
// }

.flex-col-30 {
	flex: 0 0 30%;
}

.flex-col-50 {
	flex: 1;

	@include bp(md) {
		flex: 0 0 50%;
	}
}

.column-12,
.w-100 {
	width: 100%;
}

.order-0 {
	order: 0;
}

.order-1 {
	order: 1;
}

.inner-container {
	border-radius: var(--radius-2);
	// padding: var(--spacer-inner-container);
}

.media-text .flex-row {
	padding: 3rem;
}

.dashicons-download {
	&:before {
		content: "\f316";
		color: currentColor;
	}
}